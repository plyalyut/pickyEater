package pickyeater.pickyeaterandroid;

import android.content.Intent;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;

import com.firebase.ui.auth.AuthUI;
import com.firebase.ui.auth.ErrorCodes;
import com.firebase.ui.auth.IdpResponse;
import com.firebase.ui.auth.ResultCodes;

import com.google.android.gms.common.ConnectionResult;

import com.google.android.gms.common.api.GoogleApiClient;

import com.google.firebase.auth.FirebaseAuth;

import java.util.Arrays;


public class Login extends AppCompatActivity implements GoogleApiClient.OnConnectionFailedListener
                                                         {
    GoogleApiClient mGoogleApiClient;
    private FirebaseAuth mAuth; //intializing firebase
    private FirebaseAuth.AuthStateListener mAuthListener;
    private String TAG = "Sign In"; //tag for signing in
    private static final int RC_SIGN_IN = 9001; //what google likes to use for their sign-in's

    //create the sign-in screen
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);
        //authentication listener
        mAuth = FirebaseAuth.getInstance();
        if (mAuth.getCurrentUser() != null)
        {
            Intent intent = new Intent(this, MainMenu.class);
            startActivity(intent);
            Log.i("photo", mAuth.getCurrentUser().getPhotoUrl().toString());
        }
        else {
            startActivityForResult(AuthUI.getInstance()
        .createSignInIntentBuilder()
                .setProviders((Arrays.asList(new AuthUI.IdpConfig.Builder(AuthUI.EMAIL_PROVIDER).build(),
                        new AuthUI.IdpConfig.Builder(AuthUI.GOOGLE_PROVIDER).build(),
                        new AuthUI.IdpConfig.Builder(AuthUI.FACEBOOK_PROVIDER).build(),
                        new AuthUI.IdpConfig.Builder(AuthUI.TWITTER_PROVIDER).build()))
                )
                .setIsSmartLockEnabled(true)
                .build(), RC_SIGN_IN
        );}}

    //todo create error codes
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == RC_SIGN_IN) {
            IdpResponse response = IdpResponse.fromResultIntent(data);
            // Successfully signed in
            if (resultCode == ResultCodes.OK) {
                Intent intent = new Intent(this, MainMenu.class);
                startActivity(intent);
                finish();
                return;
            } else {
                // Sign in failed
                if (response == null) {
                    // User pressed back button
                    //showSnackbar(R.string.sign_in_cancelled);
                    return;
                }

                if (response.getErrorCode() == ErrorCodes.NO_NETWORK) {
                    //showSnackbar(R.string.no_internet_connection);
                    return;
                }

                if (response.getErrorCode() == ErrorCodes.UNKNOWN_ERROR) {
                    //showSnackbar(R.string.unknown_error);
                    return;
                }
            }
        }
    }


    //if connection fails to connect to google
    @Override
    public void onConnectionFailed(ConnectionResult result){
        Log.d("GOOGLE", "Connection Failed");
    }
}
